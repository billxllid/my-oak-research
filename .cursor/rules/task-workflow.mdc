---
description: 开发任务管理与协作流程规范（任务拆解/任务清单/PR/代码审查/AI 协助）
globs:
  - "TASKS.md"
  - "docs/tasks/**"
  - "cursor-rules/**"
alwaysApply: true
---

# Oak Research - 开发任务与协作流程

本规范定义团队在项目开发过程中如何拆解、跟踪、更新任务，以及如何利用 Cursor 和 AI 进行任务流驱动开发。目标：任务清晰、进度透明、实现可追溯。

## 1. 全局任务清单（根目录）

- 根目录必须有 `TASKS.md`，用于追踪 **跨模块 / 全局任务**：

  - 框架搭建、数据库 schema、全局 API 设计、测试体系、部署脚本
  - 高层功能任务（关注速报 / 报告编写 / 资料库 / 仪表盘 / 系统管理）

- `TASKS.md` 必须包含以下结构：
  - Completed Tasks ✅
  - In Progress Tasks 🚧
  - Future Tasks 📝
  - Implementation Plan（关键技术点）
  - Relevant Files（路径 + 用途 + 状态）

## 2. 模块内局部任务清单

- 每个核心模块可单独维护子任务文件，存放在 `docs/tasks/` 目录下：

```

docs/tasks/FOCUS\_BULLETIN.md
docs/tasks/REPORT\_WRITER.md
docs/tasks/LIBRARY\_SYSTEM.md
docs/tasks/DASHBOARD.md
docs/tasks/SYS\_ADMIN.md

```

- 子任务文件专注于本模块细节：
- API 路由、UI 组件、hooks、Prisma schema、测试用例
- 参考 `TASKS.md` 的结构，但粒度更细

- 根目录 `TASKS.md` 必须引用子任务文件，例如：

```markdown
## In Progress Tasks

- [ ] 关注速报模块（见 docs/tasks/FOCUS_BULLETIN.md）
- [ ] 报告编写模块（见 docs/tasks/REPORT_WRITER.md）
```

## 3. 任务流转与维护

- 完成或推进任务后必须更新任务文件：

  - `[ ]` → `[x]` 移动到 Completed
  - 新发现的任务补充到 Future

- 相关文件清单需随进度更新，每个文件标注 ✅/🚧/📝
- 架构/数据流决策写在 “Implementation Plan” 中

## 4. AI 协助规范

- Cursor 在实现任务时应先检查对应的任务文件，确认下一个 `[ ]` 任务
- 完成后：

  - 勾选并移动任务到 Completed
  - 更新 Relevant Files 状态
  - 如果出现新工作，写入 Future Tasks

- AI 必须保持任务文件与代码实现同步

## 5. 分支与 PR 流程

- 每个任务对应一个分支：`feature/<module>-<short-desc>`

  - 示例：`feature/focus-card-ui`

- PR 必须关联任务文件（根 `TASKS.md` 或 `docs/tasks/` 内文件）
- Reviewer 检查点：

  - 是否覆盖任务文件中 In Progress 的任务
  - 是否遗漏 Future 任务
  - 文件清单是否更新

## 6. 进度追踪

- 每周汇总根 `TASKS.md` 和 `docs/tasks/`，生成进展报告
- 可视化指标：新增任务数 / 完成任务数 / 延期任务数
- 后续可对接仪表盘，自动渲染任务燃尽图

## 7. 示例更新流程

初始：

```markdown
## In Progress Tasks

- [ ] Implement database schema
- [ ] Create API endpoints for data access

## Completed Tasks

- [x] Set up project structure
- [x] Configure environment variables
```

完成数据库后：

```markdown
## In Progress Tasks

- [ ] Create API endpoints for data access

## Completed Tasks

- [x] Set up project structure
- [x] Configure environment variables
- [x] Implement database schema
```
