---
description: AI 关键词派生实现规范
globs:
  - "packages/agents/**"
  - "apps/web/app/(focus-bulletin)/config/keywords/**"
alwaysApply: true
---

# Oak Research - AI 关键词派生规范

本规则定义了关键词派生的功能逻辑、调用方式和 UI 展示规范。

## 1. 功能目标

- 用户输入一个关键词（例如「俄乌战争」），系统调用 AI 模型生成该关键词的 **多语言翻译、多表述形式、同义词/相关表达**。
- 用户可在前端界面编辑派生结果，删除无关条目。
- 保存后，派生关键词与原始关键词一起存入数据库，供后续检索使用。

## 2. 数据流与 API

关键词派生请求：

- 请求：`POST /api/ai/keywords/derive`
- 请求体：
  ```json
  {
    "keyword": "俄乌战争",
    "options": {
      "languages": ["en", "ja", "ko", "de", "fr"],
      "synonyms": true
    }
  }
  ```

````

* 响应：

  ```json
  {
    "keyword": "俄乌战争",
    "derived": [
      { "lang": "zh", "value": "乌克兰战争" },
      { "lang": "en", "value": "Russia-Ukraine War" },
      { "lang": "en", "value": "Russo-Ukrainian conflict" },
      { "lang": "ja", "value": "ロシア・ウクライナ戦争" },
      { "lang": "ko", "value": "러시아-우크라이나 전쟁" },
      { "lang": "de", "value": "Russland-Ukraine-Krieg" }
    ]
  }
  ```

后端实现：

* 派生逻辑走 **统一 LLM Gateway**（见 `@llm-gateway.mdc`）。
* 支持切换模型（默认 `DeepSeek`，可选 `OpenAI GPT-4` 等）。
* 结果必须通过 Zod 校验（保证输出为结构化 JSON）。

## 3. 前端交互规范

### 3.1 关键词设置表格（Keywords Page）

* 在「关键词设置」表格中，增加一列「关键词派生」。
* 点击按钮后，弹出对话框显示派生结果。

### 3.2 派生结果对话框

* 标题：关键词派生结果
* 内容：列表（每条一个关键词，带语言标签）
* 每条条目：`Badge(lang)` + `Input(value)` + 删除按钮
* 底部：保存按钮（提交到 API）

UI 组件：

* `DerivedKeywordList`（复用 RHF 控件）
* `Badge` 显示语言代码（zh/en/ja/ko/de/fr）
* `TrashIcon` 删除某条

## 4. 校验规则

* 原始关键词：必填，2–50 字符
* 派生关键词：至少包含 1 个结果
* 派生结果去重（同一语言下相同关键词只保留一条）
* 不允许包含 HTML/JS 代码（防止注入）

## 5. 保存逻辑

* 保存时调用 API：`POST /api/focus-bulletin/config/keywords/derive`
* 数据结构：

  ```json
  {
    "keywordId": "123",
    "derived": [
      { "lang": "en", "value": "Russia-Ukraine War" },
      { "lang": "ja", "value": "ロシア・ウクライナ戦争" }
    ]
  }
  ```
* 后端写入数据库（Prisma 模型 `Keyword` → `DerivedKeyword` 关联表）。

## 6. UI 响应式要求

* 派生结果对话框在大屏显示为 **Modal**，在小屏显示为 **全屏 Drawer**
* 列表在小屏自动换行，`Badge` 在上，输入框在下

## 7. 开发约束

* Cursor 在生成代码时必须提示：派生逻辑走统一 `packages/agents/keyword-derivation.ts`
* 所有 LLM 调用必须经过 LLM Gateway，不允许直接调用 API
* 前端展示派生结果必须可编辑，禁止只读
* 关键词派生操作必须有 Toast 提示（成功/失败）
````
