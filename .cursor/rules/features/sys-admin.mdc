---
description: 系统管理功能实现规范
globs:
  - "apps/web/app/(admin)/**"
alwaysApply: true
---

# Oak Research - 系统管理功能规范

本规则基于 Figma 原型设计，定义 **系统管理** 模块的页面布局、交互逻辑和组件使用方式。

## 1. 功能结构

系统管理包含三个核心子模块：

1. **用户管理 (users/)**
   - 管理用户账户信息
   - 支持新增、编辑、删除、搜索
2. **权限管理 (roles/)**
   - 管理角色及其权限
   - 支持新增、编辑、删除、搜索
3. **日志管理 (logs/)**
   - 查看系统日志、操作日志
   - 配置日志推送（Syslog、钉钉、微信等）

## 2. 路由规范

```

apps/web/app/(admin)/
├── layout.tsx             # 子布局：左侧菜单 + 右侧内容
├── users/                 # 用户管理
│   └── page.tsx
├── roles/                 # 权限管理
│   └── page.tsx
└── logs/                  # 日志管理
└── page.tsx

```

## 3. 用户管理布局规范

页面结构：

- 顶部：搜索框 + 添加用户按钮 + 高级筛选
- 中部：用户表格（Shadcn `<Table />`）
  - 列：用户 ID、用户名、角色、描述、操作（编辑/删除）
- 添加/编辑用户弹窗：
  - 字段：用户名、角色选择、描述、有效期、密码重置

交互逻辑：

- 新建用户 → `POST /api/admin/users`
- 编辑用户 → `PUT /api/admin/users/:id`
- 删除用户 → `DELETE /api/admin/users/:id`
- 搜索/筛选 → 表格支持 `debounce` 输入

## 4. 权限管理布局规范

页面结构：

- 顶部：搜索框 + 添加角色按钮
- 中部：角色表格
  - 列：角色 ID、角色名称、所属机构、描述、操作
- 添加/编辑角色弹窗：
  - 字段：角色名称、机构、权限范围（可复选）

交互逻辑：

- 新建角色 → `POST /api/admin/roles`
- 编辑角色 → `PUT /api/admin/roles/:id`
- 删除角色 → `DELETE /api/admin/roles/:id`
- 分配权限 → 表单复选框，提交后更新数据库

## 5. 日志管理布局规范

页面结构：

- Tab 切换（系统日志 / 操作日志 / 日志推送）

系统日志：

- 表格列：记录 ID、时间、模块名、内容
- API: `GET /api/admin/logs/system`

操作日志：

- 表格列：记录 ID、时间、用户名、操作内容
- API: `GET /api/admin/logs/action`

日志推送：

- 表格列：ID、创建时间、推送类型、订阅内容、操作
- 添加推送源按钮 → 弹窗表单：
  - 订阅类型（Syslog、钉钉、微信、短信等）
  - 地址
  - 订阅内容描述
- API:
  - `GET /api/admin/logs/push`
  - `POST /api/admin/logs/push`
  - `DELETE /api/admin/logs/push/:id`

## 6. 表单与校验

- 使用 React Hook Form + Zod
- 用户名：必填，3–50 字符
- 角色名称：必填，2–50 字符
- 日志推送地址：必填，URL 校验

示例表单（添加用户）：

```tsx
<Form>
  <FormField name="username" control={form.control}>
    <Input placeholder="请输入用户名" />
  </FormField>
  <FormField name="role" control={form.control}>
    <Select options={roles} />
  </FormField>
  <FormField name="description" control={form.control}>
    <Textarea placeholder="请输入描述" />
  </FormField>
  <Button type="submit">保存</Button>
</Form>
```

## 7. UI 组件规范

- **AdminTable** → 用户、角色、日志表格通用封装
- **FilterBar** → 搜索 + 筛选控件
- **DrawerForm** → 抽屉式表单（用于新增/编辑）
- **Tabs** → 日志管理 Tab 切换

## 8. 响应式要求

- 表格在大屏保持全宽展示
- 小屏时表格自动折叠为卡片形式（每行转为卡片）
- 弹窗表单在小屏改为全屏抽屉

## 9. 开发约束

- 所有增删改操作必须通过 API，不允许前端 mock
- 日志表格支持分页与筛选
- 日志推送配置必须加密存储敏感信息
- Cursor 在生成表单/表格时必须提示：组件应优先复用 `packages/ui/` 中的 AdminTable、DrawerForm 等
