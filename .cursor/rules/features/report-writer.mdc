---
description: 报告编写功能实现规范
globs:
  - "apps/web/app/(report-writer)/**"
alwaysApply: true
---

# Oak Research - 报告编写功能规范

本规则基于 Figma 原型设计，定义 **报告编写** 模块的页面布局、交互逻辑、组件使用方式。

## 1. 功能结构

报告编写包含三个核心子模块：

1. **模板编辑 (templates/)**

   - 管理报告模板（新增、编辑、删除、搜索）
   - 模板支持分类、内容（Markdown）、名称

2. **报告编辑 (page.tsx)**

   - 三栏布局：提示词/素材配置 → AI 对话 → 报告编辑器
   - 与 LLM 交互，支持生成报告、修改报告、继续对话

3. **报告管理 (manage/)**
   - 管理用户已生成的报告
   - 支持搜索、查看、进入编辑页、导出

## 2. 路由规范

```
apps/web/app/(report-writer)/
├── layout.tsx             # 子布局：左侧菜单 + 右侧内容
├── page.tsx               # 报告编辑 (默认入口)
├── templates/             # 模板编辑
│   └── page.tsx
└── manage/                # 报告管理
└── page.tsx

```

## 3. 模板编辑布局规范

- **页面结构**

  - 顶部：搜索框 + 添加模板按钮
  - 中部：模板表格（Shadcn `<Table />`）
    - 列：模板 ID、名称、分类、操作（编辑/删除）
  - 编辑弹窗：
    - 模板名称
    - 分类选择
    - 模板内容（Markdown 编辑器）

- **交互逻辑**
  - 添加/编辑模板时使用 `packages/ui/form/` + Zod 校验
  - Markdown 编辑区必须用 `MarkdownEditor`（packages/ui/markdown/）

## 4. 报告编辑布局规范

### 三栏布局

1. **左侧配置栏（生成前可见，生成后隐藏）**

   - 提示词输入框（textarea，多行）
   - 素材选择区（Tab：关注速报收藏夹 / 知识库 / 上传文件）
   - 模板选择下拉框
   - “开始生成报告”按钮

2. **中间 AI 对话区**

   - 消息流 UI：用户消息（右对齐） + AI 消息（左对齐）
   - 支持多轮对话，UI 使用 `MessageBubble` 组件
   - 顶部配置按钮：切换 LLM 模型、温度参数

3. **右侧报告编辑器**
   - 显示 AI 生成的报告（Markdown 编辑器，可修改）
   - 修改后的内容会实时更新当前报告版本
   - 操作区：保存 / 撤销 / 继续生成

### 报告生成逻辑

- 点击“开始生成报告”：
  - 隐藏左侧配置栏
  - AI 对话区输出 “草稿生成中”
  - 报告编辑器显示生成结果
- 用户可以：
  - 编辑报告内容（Markdown）
  - 发送指令给 AI 修改
  - 撤销回退到历史版本

## 5. 报告管理布局规范

- **页面结构**
  - 顶部：搜索框
  - 中部：报告列表表格
    - 列：报告 ID、名称、模板、创建时间、操作（查看/编辑/导出）
  - 点击查看 → 打开详情抽屉：
    - 标题、摘要、最后修改时间
    - 按钮：继续编辑、导出 PDF/DOCX/Markdown

## 6. 数据交互逻辑

### 6.1 API 规范

- 模板管理

  - `GET /api/report-writer/templates`
  - `POST /api/report-writer/templates`
  - `PUT /api/report-writer/templates/:id`
  - `DELETE /api/report-writer/templates/:id`

- 报告管理

  - `GET /api/report-writer/reports`
  - `POST /api/report-writer/reports`
  - `PUT /api/report-writer/reports/:id`
  - `DELETE /api/report-writer/reports/:id`

- 报告生成
  - `POST /api/report-writer/generate`
  - 请求体：`{ prompt, templateId, materialIds, options }`
  - 响应：`{ draft, conversationId }`

### 6.2 数据流

- 所有数据请求通过 **SWR** 管理缓存
- 报告生成与 AI 对话必须走 **统一 LLM Gateway**（`@llm-gateway.mdc`）

## 7. 表单与校验

- 所有表单必须使用 **React Hook Form + Zod**
- 模板/报告名称必填，长度 2–100 字符
- 上传文件格式校验：`.pdf .docx .txt .md`

## 8. UI 组件规范

- **MarkdownEditor** → 用于模板编辑和报告编辑器
- **MessageBubble** → 用于 AI 对话区
- **ConfigForm** → 左侧配置表单（封装 RHF）
- **ReportTable** → 报告管理表格

## 9. 响应式要求

- 三栏布局在 **lg 屏幕** 保持 3 栏
- 在 **md 屏幕** 时，左栏折叠为抽屉式（配置按钮打开）
- 在 **sm 屏幕** 时，右侧编辑器折叠，AI 对话全屏显示

## 10. 开发约束

- AI 调用必须通过统一的 LLM Gateway，不允许直接调用外部 API
- 报告版本必须存储在数据库中，支持回滚
- 编辑器中的修改自动保存（debounce 2s 内）
- Cursor 必须提示开发者：复杂 UI 组件先封装到 `packages/ui/` 再使用
